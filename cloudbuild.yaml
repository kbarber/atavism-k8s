#############
# VARIABLES #
#############
substitutions:
  _LICENSE_EMAIL: your@email.com
  _LICENSE_KEY: license-key
  _CLOUDSDK_COMPUTE_ZONE: europe-west2-b
  _CLOUDSDK_CONTAINER_CLUSTER: atavism
  _TILLERLESS: false
  _TILLER_NAMESPACE: kube-system
  _GCS_PLUGIN_VERSION: 0.2.0
  _HELM_REPO_NAME: bobsh
  _HELM_REPO_URL: gs://bobsh/charts
  _HELM_CHART_NAME: atavism
  _HELM_CHART_VERSION: "1.0.0-${SHORT_SHA}"
  _HELM_PACKAGE: "${_HELM_CHART_NAME}-${_HELM_VERSION}.tgz"
  _CONTAINER_NAME: "atavism"
  _CONTAINER_VERSION: "${SHORT_SHA}-git"
  _CONTAINER_URL: "gcr.io/${PROJECT_ID}/${_CONTAINER_NAME}:${_CONTAINER_VERSION}"
  _HELM_CONTAINER_URL: "gcr.io/$PROJECT_ID/helm"
  _HELM_TEST_NAMESPACE: "atavism-test-${SHORT_SHA}"
  _HELM_ACCEPTANCE_NAMESPACE: "atavism-acceptance"
  _HELM_PROD_NAMESPACE: "atavism"
  _HELM_TEST_TIMEOUT: 600
  _HELM_INSTALL_TIMEOUT: 1800

#### BUILD STEPS ####

helmEnv: &helmEnv
  - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
  - 'TILLERLESS=${_TILLERLESS}'
  - 'TILLER_NAMESPACE=${_TILLER_NAMESPACE}'
  - 'GCS_PLUGIN_VERSION=${_GCS_PLUGIN_VERSION}'

helmRepoIncubator: &helmRepoIncubator
  - 'HELM_REPO_NAME=incubator'
  - 'HELM_REPO_URL=https://kubernetes-charts-incubator.storage.googleapis.com '

helmRepoOurs: &helmRepoOurs
  - 'HELM_REPO_NAME=${_HELM_REPO_NAME}'
  - 'HELM_REPO_URL=${_HELM_REPO_URL}'

helmStep: &helmStep
  dir: 'charts/${_HELM_CHART_NAME}'
  name: ${_HELM_CONTAINER_URL}
  env:
    <<: *helmEnv
  waitFor: ['-']

dockerStep: &dockerStep
  dir: 'containers/${_CONTAINER_NAME}'
  name: 'gcr.io/cloud-builders/docker'
  waitFor: ['-']

ubuntuStep: &ubuntuStep
  name: 'ubuntu:18.04'
  waitFor: ['-']

steps:

#############
# CONTAINER #
#############

- <<: *dockerStep
  id: 'ContainerBuild'
  args:
  - 'build'
  - '-t'
  - ${_CONTAINER_URL}
  - '.'

- <<: *dockerStep
  id: ContainerPush
  args:
  - 'push'
  - ${_CONTAINER_URL}
  waitFor:
  - 'ContainerBuild'


################################
# CHART PACKAGING AND SHIPPING #
################################

- <<: *ubuntuStep
  id: 'FixContainerVersion'
  dir: 'charts/${_HELM_CHART_NAME}/ourcharts/atavism-service'
  entrypoint: 'sed'
  args:
    - '-i'
    - '-e'
    - 's/latest/${_CONTAINER_VERSION}/g'
    - 'values.yaml'

- <<: *helmStep
  id: 'HelmLint'
  args:
  - lint
  - '--debug'
  #- '--strict'
  waitFor:
    - 'FixContainerVersion'

- <<: *helmStep
  id: 'HelmPackage'
  args:
  - package
  - '--debug'
  - '--dependency-update'
  - '--version=${_HELM_CHART_VERSION}'
  #- '--keyring=/foo.gpg'
  #- '--sign'
  - '.'
  env:
    <<: [*helmEnv, *helmRepoIncubator]
  waitFor:
  - FixContainerVersion

- <<: *helmStep
  id: 'HelmGcsPush'
  args:
  - gcs
  - push
  - ${_HELM_PACKAGE}
  - ${_HELM_REPO_NAME}
  - '--retry'
  - '--debug'
  env:
    <<: [*helmEnv, *helmRepoOurs]
  waitFor:
  - 'HelmPackage'
  - 'HelmLint'

#######################
# CHART RELEASE TESTS #
#######################

- <<: *helmStep
  id: 'HelmTestRelease'
  args:
  - install
  - ${_HELM_PACKAGE}
  - '--atomic'
  - '--name=${_HELM_TEST_NAMESPACE}'
  - '--replace'
  - '--debug'
  - '--timeout=${_HELM_INSTALL_TIMEOUT}'
  - '--set'
  - 'license.email=${_LICENSE_EMAIL}'
  - '--set'
  - 'license.key=${_LICENSE_KEY}'
  - '--namespace=${_HELM_TEST_NAMESPACE}'
  #- '--verify'
  - '--wait'
  waitFor:
  - 'HelmPackage'
  - 'HelmLint'
  - 'ContainerPush'

- <<: *helmStep
  id: 'HelmTestReleaseTest'
  args:
  - test
  - ${_HELM_TEST_NAMESPACE}
  - '--cleanup'
  - '--parallel'
  - '--debug'
  - '--timeout=${_HELM_TEST_TIMEOUT'
  waitFor:
  - 'HelmTestRelease'

- <<: *helmStep
  id: 'HelmTestReleaseDelete'
  args:
  - delete
  - '--debug'
  - '--purge'
  - ${_HELM_TEST_NAMESPACE}
  waitFor:
  - 'HelmTestReleaseTest'

#######################
# ACCEPTANCE ROLLOUT  #
#######################


- <<: *helmStep
  id: 'HelmAcceptanceUpgrade'
  args:
  - upgrade
  - ${_HELM_ACCEPTANCE_NAMESPACE}
  - ${_HELM_PACKAGE}
  - '--atomic'
  - '--install'
  - '--debug'
  - '--namespace=${_HELM_ACCEPTANCE_NAMESPACE}'
  - '--timeout=${_HELM_INSTALL_TIMEOUT}'
  #- '--verify'
  - '--wait'
  waitFor:
  - 'HelmTestReleaseTest'

- <<: *helmStep
  id: 'HelmAcceptanceUpgradeTest'
  args:
  - test
  - ${_HELM_ACCEPTANCE_NAMESPACE}
  - '--cleanup'
  - '--parallel'
  - '--debug'
  - '--timeout=${_HELM_TEST_TIMEOUT}'
  waitFor:
  - 'HelmAcceptanceUpgrade'


#######################
# PRODUCTION ROLLOUT  #
#######################


- <<: &helmStep
  id: 'HelmProdUpgrade'
  args:
  - upgrade
  - ${_HELM_PROD_NAMESPACE}
  - ${_HELM_PACKAGE}
  - '--atomic'
  - '--install'
  - '--namespace=${_HELM_PROD_NAMESPACE}'
  #- '--verify'
  - '--wait'
  - '--timeout=${_HELM_INSTALL_TIMEOUT}'
  - '--debug'
  waitFor:
  - 'HelmAcceptanceUpgradeTest'

- <<: &helmStep
  id: 'HelmProdUpgradeTest'
  args:
  - test
  - ${_HELM_PROD_NAMESPACE}
  - '--cleanup'
  - '--parallel'
  - '--debug'
  - '--timeout=${_HELM_TEST_TIMEOUT}'
  waitFor:
  - 'HelmProdUpgrade'
